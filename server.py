from flask import Flask, request, jsonify
import paho.mqtt.client as mqtt
import ssl
import time

# ==== Flask App ====
app = Flask(__name__)

# ==== HiveMQ Cloud Credentials ====
broker = "efff4f0d50144b6d92ab49737f0971b7.s1.eu.hivemq.cloud"
port = 8883
username = "Test35"
password = "Ab123456"
topic = "test/12"

# ==== MQTT Setup ====
client = mqtt.Client()
client.username_pw_set(username, password)

# ‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö cert (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)
client.tls_set(ca_certs=None, certfile=None, keyfile=None, cert_reqs=ssl.CERT_NONE)
client.tls_insecure_set(True)

def on_connect(client, userdata, flags, rc):
    if rc == 0:
        print("‚úÖ Connected to HiveMQ Broker")
    else:
        print(f"‚ùå Connection failed with code {rc}")

client.on_connect = on_connect
client.connect(broker, port)
client.loop_start()
time.sleep(2)  # ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠

# ==== (Option) ‡∏•‡πâ‡∏≤‡∏á retained message ‡πÄ‡∏î‡∏¥‡∏°‡πÉ‡∏ô topic ====
# ‡∏ó‡∏≥‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡πâ‡∏≤‡∏á
# client.publish(topic, payload=None, retain=True)

# ==== Route ‡∏£‡∏±‡∏ö POST ‡∏à‡∏≤‡∏Å PowerApps ====
@app.route('/upload_image', methods=['POST'])
def upload_image():
    data = request.get_json()

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÑ‡∏´‡∏°
    if not data or 'image_base64' not in data:
        return jsonify({'error': 'Missing image_base64'}), 400

    image_base64 = data['image_base64']

    # Debug log ‡∏î‡∏π‡∏ß‡πà‡∏≤ base64 ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏£‡∏¥‡∏á‡πÑ‡∏´‡∏°
    print(f"[{time.strftime('%H:%M:%S')}] Received base64 (preview):", image_base64[:50])

    # ‡∏™‡πà‡∏á‡∏†‡∏≤‡∏û‡πÑ‡∏õ‡∏¢‡∏±‡∏á MQTT (‡πÑ‡∏°‡πà‡∏°‡∏µ retain)
    info = client.publish(topic, image_base64)  # üîß retain=True ‡πÄ‡∏≠‡∏≤‡∏≠‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß
    info.wait_for_publish()

    if info.is_published():
        return jsonify({'message': '‚úÖ Image published to MQTT'}), 200
    else:
        return jsonify({'message': '‚ùå Failed to publish image'}), 500

# ==== Start Flask App ====
if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)
